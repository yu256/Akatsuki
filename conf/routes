GET / controllers.HomeController.index

GET /media/*file controllers.api.v2.MediaController.serveFile(file)

GET /.well-known/nodeinfo controllers.NodeInfoController.wellKnown
GET /nodeinfo/2.0 controllers.NodeInfoController.nodeInfo

POST /oauth/token controllers.oauth.OAuth2Controller.token
GET /oauth/authorize controllers.oauth.OAuth2Controller.authorize(response_type, client_id: Long, redirect_uri, scope: Option[String], force_login: Option[Boolean], lang: Option[String])

POST /api/v1/apps controllers.api.v1.AppsController.apps
GET /api/v1/instance controllers.api.v1.InstanceController.instance
POST /api/v1/accounts controllers.api.v1.AccountsController.register
POST /api/v1/accounts/$id<[0-9]+>/follow controllers.api.v1.accounts.FollowsController.follow(id: Long)
GET /api/v1/accounts/verify_credentials controllers.api.v1.AccountsController.verify
GET /api/v1/accounts/$id<[0-9]+> controllers.api.v1.AccountsController.getAccount(id: Long)
GET /api/v1/accounts/:targetId/statuses controllers.api.v1.AccountsController.getUserTimeline(targetId: Long, only_media: Boolean = false, max_id: Option[Long], since_id: Option[Long], min_id: Option[Long], limit: Int = 20)
GET /api/v1/accounts/relationships controllers.api.v1.AccountsController.getRelationships(with_suspended: Boolean = false)
GET /api/v1/filters controllers.api.v1.FiltersController.get
POST /api/v1/statuses controllers.api.v1.StatusesController.post
DELETE /api/v1/statuses/:id controllers.api.v1.StatusesController.delete(id: Long)
GET /api/v1/timelines/home controllers.api.v1.TimelineController.home(max_id: Option[Long], since_id: Option[Long], min_id: Option[Long], limit: Int = 20)
GET /api/v1/timelines/public controllers.api.v1.TimelineController.public(local: Boolean = false, remote: Boolean = false, only_media: Boolean = false, max_id: Option[Long], since_id: Option[Long], min_id: Option[Long], limit: Int = 20)

POST /api/v2/media controllers.api.v2.MediaController.post